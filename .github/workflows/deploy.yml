name: 🚀 DevPulse CI/CD to EC2

on:
  push:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v3

    - name: 🔐 Setup SSH Key
      run: |
        echo "${{ secrets.EC2_KEY }}" | base64 -d > ec2-key.pem
        chmod 600 ec2-key.pem

    - name: 🚀 Deploy to EC2 with Docker
      run: |
        ssh -o StrictHostKeyChecking=no -i ec2-key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'

          set -e

          # ✅ Ensure deployment root directory exists
          mkdir -p ${{ secrets.DEPLOY_DIR }}
          cd ${{ secrets.DEPLOY_DIR }}

          # ✅ Clone or pull repo inside deploy dir
          if [ ! -d "devpulse" ]; then
            echo "📥 Cloning project..."
            git clone https://github.com/${{ github.repository }} devpulse
          else
            echo "🔁 Pulling latest changes..."
            cd devpulse
            git pull origin main || git pull origin master
            cd ..
          fi

          # ✅ Enter the actual project root directory
          cd devpulse

          # 🐳 Install Docker if missing
          if ! command -v docker &> /dev/null; then
            echo "📦 Installing Docker..."
            sudo yum update -y
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker $USER
          fi

          # 🐳 Install Docker Compose v2 if missing
          if ! docker compose version &> /dev/null; then
            echo "📦 Installing Docker Compose v2..."
            sudo curl -SL https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          # 🔁 Run Docker Compose
          echo "🚀 Running Docker Compose..."
          docker compose down --remove-orphans
          docker compose up --build -d

          echo "✅ Deployment complete!"
        EOF
